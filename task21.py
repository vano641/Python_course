# Планеты вращаются вокруг звезд по Элептическим орбитам.
# Самой далекой планетой будет та, Орбита которой имеет самую большую площадь.
# Круговые орбиты не учитывать.
# Напишите функцию find_farthest_orbit(list_of_orbits), которая среди списка орбит 
# найдет самую далекую(Орбита с самой большой площадью)
# Результатом функции дожен быть Кортеж, содержащий длины полуосей эллипса самой далекой планеты.
# Каждая орбита представляет из себя Кортеж из Пары чисел - полуосей ее элипса.
# Площадь элипса вычисляется по формуле S = pi * a * b,
# где pi = 3.14; a и b - длины полуосей элипса.

# Пример:
# Ввод:
# orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
# print(*find_farthest_orbit(orbits))
# Вывод:
# 2.5 10

# Импортируем число Пи:
from math import pi

def find_farthest_orbit(list_of_orbits):
# создадим список для Элиптических орбит (исключаем круговые орбиты)
    list1 = [i for i in list_of_orbits if i[0] != i[1]] # выводятся все значения кроме (6, 6)
    #print(list1)
# создадим список где мы будем считать Площади каждого обьекта(элипса)
    list_s = [(pi * i[0] * i[1]) for i in list1] # по формуле
    #print(list_s)
# найдем максимальную площадь наших элипсов из list_s
    max_s = list_s.index(max(list_s)) # функция .index находит и возвращает индекс max(максимального элемента в list_s)
    return list1[max_s] # возвращаем элемент(кортеж) из списка list1 индекс которого = максимальной площадью


orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
print(*find_farthest_orbit(orbits)) # * это распаковка кортежа

